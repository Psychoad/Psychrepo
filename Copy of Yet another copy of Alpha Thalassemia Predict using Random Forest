{"metadata":{"colab":{"provenance":[{"file_id":"1ZbPPMH6JSkRiKT5cZaBboaiJjTVBxHri","timestamp":1715803702953},{"file_id":"15d860yuD3XJT7qJBlWO7MT72dxfL-rvw","timestamp":1715611096817},{"file_id":"1h2ydke--lxRHll1gZzLr0-ymZgLZSMJO","timestamp":1714714416002},{"file_id":"https://storage.googleapis.com/kaggle-colab-exported-notebooks/alpha-thalassemia-predict-using-knn-725092ec-871c-4264-bc1f-516f4af6f8bc.ipynb?X-Goog-Algorithm=GOOG4-RSA-SHA256&X-Goog-Credential=gcp-kaggle-com%40kaggle-161607.iam.gserviceaccount.com/20240428/auto/storage/goog4_request&X-Goog-Date=20240428T093645Z&X-Goog-Expires=259200&X-Goog-SignedHeaders=host&X-Goog-Signature=7c222a389e6c78700475e6b9afbe2a813b016551390928a7d72e8139e41b504805c4825ad20d1e99aa757207f173c3046573a8ced3dd13f39fda7091a3e54222d00e605fba629040554e95dac599b4cc13ecd2bfc2a106ccf94491fabc144a36731ae528d789032d81152392f16b274c17e3dc1fee27abdd97859f18dc5c5cb5d5dfeeb757a5b705a967b8a0ca941b3295afb5259c6ff02057af8f25a5d89ca8bfeb03ebdcec923ac838e0fcf2a15177019a5891bbc87a67941485649bcaf4bf9a0fa2d1aab1cfa55aa4252969139d3cfc6bdaa4a30b5a033e1733b4c8dfb16e7c75396637f72671264eee9efae2b84aa347a537bd1712c2ed32d95dd59dd3a0","timestamp":1714309370748}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":3532313,"sourceType":"datasetVersion","datasetId":2117825}],"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":0,"nbformat":4,"cells":[{"source":["\n","# IMPORTANT: RUN THIS CELL IN ORDER TO IMPORT YOUR KAGGLE DATA SOURCES\n","# TO THE CORRECT LOCATION (/kaggle/input) IN YOUR NOTEBOOK,\n","# THEN FEEL FREE TO DELETE THIS CELL.\n","# NOTE: THIS NOTEBOOK ENVIRONMENT DIFFERS FROM KAGGLE'S PYTHON\n","# ENVIRONMENT SO THERE MAY BE MISSING LIBRARIES USED BY YOUR\n","# NOTEBOOK.\n","\n","import os\n","import sys\n","from tempfile import NamedTemporaryFile\n","from urllib.request import urlopen\n","from urllib.parse import unquote, urlparse\n","from urllib.error import HTTPError\n","from zipfile import ZipFile\n","import tarfile\n","import shutil\n","\n","CHUNK_SIZE = 40960\n","DATA_SOURCE_MAPPING = 'alpha-thalassemia-dataset:https%3A%2F%2Fstorage.googleapis.com%2Fkaggle-data-sets%2F2117825%2F3532313%2Fbundle%2Farchive.zip%3FX-Goog-Algorithm%3DGOOG4-RSA-SHA256%26X-Goog-Credential%3Dgcp-kaggle-com%2540kaggle-161607.iam.gserviceaccount.com%252F20240428%252Fauto%252Fstorage%252Fgoog4_request%26X-Goog-Date%3D20240428T093645Z%26X-Goog-Expires%3D259200%26X-Goog-SignedHeaders%3Dhost%26X-Goog-Signature%3D6ce19e73417e517f81c1bcab10115fbaebeccf7597cdae99bae4877d711f42ce35dafb6b5b13a0d70a617385e9d040e61eb34594a7b700bc3199623a6bf61d1f34e76b5ccdf906c05a16579cefc69493dcfab6c7af83a7165965e9d450ac6d2ceb99b2c86af4f7c9b198beae3059c0e237d10081a4729ee93ece42cc78493de28fb6c62ac506a2e14a2923251ac96f71dcd0d472ca6134ab6915379f51401558cc470d0ca3de494511a3857543f8e031967c353cf25693bfb00b3a0856e87ba521b5094c10c3a4d291b7240e3d3261de4d8d3912a6fa226b82b52aa5047cdec5a6dcd035c618344f6336958f15a8f43a126db6a5675b302c1975ec0ed535b0f1'\n","\n","KAGGLE_INPUT_PATH='/kaggle/input'\n","KAGGLE_WORKING_PATH='/kaggle/working'\n","KAGGLE_SYMLINK='kaggle'\n","\n","!umount /kaggle/input/ 2> /dev/null\n","shutil.rmtree('/kaggle/input', ignore_errors=True)\n","os.makedirs(KAGGLE_INPUT_PATH, 0o777, exist_ok=True)\n","os.makedirs(KAGGLE_WORKING_PATH, 0o777, exist_ok=True)\n","\n","try:\n","  os.symlink(KAGGLE_INPUT_PATH, os.path.join(\"..\", 'input'), target_is_directory=True)\n","except FileExistsError:\n","  pass\n","try:\n","  os.symlink(KAGGLE_WORKING_PATH, os.path.join(\"..\", 'working'), target_is_directory=True)\n","except FileExistsError:\n","  pass\n","\n","for data_source_mapping in DATA_SOURCE_MAPPING.split(','):\n","    directory, download_url_encoded = data_source_mapping.split(':')\n","    download_url = unquote(download_url_encoded)\n","    filename = urlparse(download_url).path\n","    destination_path = os.path.join(KAGGLE_INPUT_PATH, directory)\n","    try:\n","        with urlopen(download_url) as fileres, NamedTemporaryFile() as tfile:\n","            total_length = fileres.headers['content-length']\n","            print(f'Downloading {directory}, {total_length} bytes compressed')\n","            dl = 0\n","            data = fileres.read(CHUNK_SIZE)\n","            while len(data) > 0:\n","                dl += len(data)\n","                tfile.write(data)\n","                done = int(50 * dl / int(total_length))\n","                sys.stdout.write(f\"\\r[{'=' * done}{' ' * (50-done)}] {dl} bytes downloaded\")\n","                sys.stdout.flush()\n","                data = fileres.read(CHUNK_SIZE)\n","            if filename.endswith('.zip'):\n","              with ZipFile(tfile) as zfile:\n","                zfile.extractall(destination_path)\n","            else:\n","              with tarfile.open(tfile.name) as tarfile:\n","                tarfile.extractall(destination_path)\n","            print(f'\\nDownloaded and uncompressed: {directory}')\n","    except HTTPError as e:\n","        print(f'Failed to load (likely expired) {download_url} to path {destination_path}')\n","        continue\n","    except OSError as e:\n","        print(f'Failed to load {download_url} to path {destination_path}')\n","        continue\n","\n","print('Data source import complete.')\n"],"metadata":{"id":"2S4R18C8EHG2","executionInfo":{"status":"ok","timestamp":1715800063014,"user_tz":-330,"elapsed":518,"user":{"displayName":"Shiv Mehrotra","userId":"02029571613485054389"}},"outputId":"5ba49b0f-7735-40c8-a70e-ba0e66305c57","colab":{"base_uri":"https://localhost:8080/"}},"cell_type":"code","outputs":[{"output_type":"stream","name":"stdout","text":["Failed to load (likely expired) https://storage.googleapis.com/kaggle-data-sets/2117825/3532313/bundle/archive.zip?X-Goog-Algorithm=GOOG4-RSA-SHA256&X-Goog-Credential=gcp-kaggle-com%40kaggle-161607.iam.gserviceaccount.com%2F20240428%2Fauto%2Fstorage%2Fgoog4_request&X-Goog-Date=20240428T093645Z&X-Goog-Expires=259200&X-Goog-SignedHeaders=host&X-Goog-Signature=6ce19e73417e517f81c1bcab10115fbaebeccf7597cdae99bae4877d711f42ce35dafb6b5b13a0d70a617385e9d040e61eb34594a7b700bc3199623a6bf61d1f34e76b5ccdf906c05a16579cefc69493dcfab6c7af83a7165965e9d450ac6d2ceb99b2c86af4f7c9b198beae3059c0e237d10081a4729ee93ece42cc78493de28fb6c62ac506a2e14a2923251ac96f71dcd0d472ca6134ab6915379f51401558cc470d0ca3de494511a3857543f8e031967c353cf25693bfb00b3a0856e87ba521b5094c10c3a4d291b7240e3d3261de4d8d3912a6fa226b82b52aa5047cdec5a6dcd035c618344f6336958f15a8f43a126db6a5675b302c1975ec0ed535b0f1 to path /kaggle/input/alpha-thalassemia-dataset\n","Data source import complete.\n"]}],"execution_count":6},{"cell_type":"code","source":["! wget https://raw.githubusercontent.com/awLann/dataset/main/alphanorm.csv"],"metadata":{"id":"7lLc33f_V1YW","outputId":"df697086-39f0-4dd0-a953-67d562897df1","executionInfo":{"status":"ok","timestamp":1715800067288,"user_tz":-330,"elapsed":690,"user":{"displayName":"Shiv Mehrotra","userId":"02029571613485054389"}},"colab":{"base_uri":"https://localhost:8080/"}},"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["--2024-05-15 19:07:45--  https://raw.githubusercontent.com/awLann/dataset/main/alphanorm.csv\n","Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 185.199.108.133, 185.199.109.133, 185.199.110.133, ...\n","Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|185.199.108.133|:443... connected.\n","HTTP request sent, awaiting response... 200 OK\n","Length: 19537 (19K) [text/plain]\n","Saving to: ‘alphanorm.csv’\n","\n","\ralphanorm.csv         0%[                    ]       0  --.-KB/s               \ralphanorm.csv       100%[===================>]  19.08K  --.-KB/s    in 0s      \n","\n","2024-05-15 19:07:46 (67.4 MB/s) - ‘alphanorm.csv’ saved [19537/19537]\n","\n"]}]},{"cell_type":"code","source":["import pandas as pd\n","import seaborn as sns\n","import matplotlib.pyplot as plt"],"metadata":{"id":"z4oaOQkaV_NM","executionInfo":{"status":"ok","timestamp":1715800073445,"user_tz":-330,"elapsed":3764,"user":{"displayName":"Shiv Mehrotra","userId":"02029571613485054389"}}},"execution_count":8,"outputs":[]},{"cell_type":"code","source":["df = pd.read_csv('alphanorm.csv')\n","df"],"metadata":{"id":"nrfrEv6zWWlP","outputId":"be8ef897-1e1a-4ce8-9d21-391dc8672a8f","executionInfo":{"status":"ok","timestamp":1715800077863,"user_tz":-330,"elapsed":4,"user":{"displayName":"Shiv Mehrotra","userId":"02029571613485054389"}},"colab":{"base_uri":"https://localhost:8080/","height":423}},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        sex    hb   pcv   rbc   mcv   mch  mchc   rdw   wbc       neut  \\\n","0    female  10.8  35.2  5.12  68.7  21.2  30.8  13.4   9.6  53.000000   \n","1      male  10.8  26.6  4.28  62.1  25.3  40.8  19.8  10.3  49.400000   \n","2    female  10.8  35.2  5.12  68.7  21.2  30.8  13.4   9.6  53.000000   \n","3      male  14.5  43.5  5.17  84.0  28.0  33.4  12.1  11.9  31.000000   \n","4      male  11.5  34.4  5.02  68.7  22.9  33.4  15.7  20.4  67.000000   \n","..      ...   ...   ...   ...   ...   ...   ...   ...   ...        ...   \n","198    male  15.5  45.9  5.19  88.4  29.9  33.8  12.6   8.8  47.565000   \n","199  female  10.4  33.3  4.93  67.6  21.1  31.2  14.8   8.9  44.478378   \n","200    male   9.8  29.8  4.75  62.7  19.0  30.4  14.7   7.2  48.234483   \n","201    male  11.2  37.2  5.43  68.5  20.6  30.1  15.1  12.0  13.500000   \n","202    male  14.4  44.5  5.70  78.0  25.3  31.2  15.0   7.2  36.000000   \n","\n","         lymph    plt        hba      hba2       hbf      phenotype  \n","0    33.000000  309.0  88.500000  2.600000  0.110000  alpha carrier  \n","1    43.100000  687.0  87.800000  2.400000  0.900000  alpha carrier  \n","2    33.000000  309.0  88.500000  2.600000  0.100000  alpha carrier  \n","3    50.000000  334.0  86.800000  2.800000  0.300000  alpha carrier  \n","4    30.000000  596.0  86.300000  2.400000  1.300000  alpha carrier  \n","..         ...    ...        ...       ...       ...            ...  \n","198  40.975000  177.0  88.600000  3.200000  0.400000         normal  \n","199  45.527027  295.0  88.000000  2.400000  0.500000         normal  \n","200  41.537931  262.0  85.100000  2.400000  1.100000         normal  \n","201  76.800000  277.0  86.523291  2.588608  0.769231         normal  \n","202  59.000000  224.0  86.523291  2.588608  0.769231         normal  \n","\n","[203 rows x 16 columns]"],"text/html":["\n","  <div id=\"df-6f3bba81-964c-4cf2-bb19-cd090682c543\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>sex</th>\n","      <th>hb</th>\n","      <th>pcv</th>\n","      <th>rbc</th>\n","      <th>mcv</th>\n","      <th>mch</th>\n","      <th>mchc</th>\n","      <th>rdw</th>\n","      <th>wbc</th>\n","      <th>neut</th>\n","      <th>lymph</th>\n","      <th>plt</th>\n","      <th>hba</th>\n","      <th>hba2</th>\n","      <th>hbf</th>\n","      <th>phenotype</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>female</td>\n","      <td>10.8</td>\n","      <td>35.2</td>\n","      <td>5.12</td>\n","      <td>68.7</td>\n","      <td>21.2</td>\n","      <td>30.8</td>\n","      <td>13.4</td>\n","      <td>9.6</td>\n","      <td>53.000000</td>\n","      <td>33.000000</td>\n","      <td>309.0</td>\n","      <td>88.500000</td>\n","      <td>2.600000</td>\n","      <td>0.110000</td>\n","      <td>alpha carrier</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>male</td>\n","      <td>10.8</td>\n","      <td>26.6</td>\n","      <td>4.28</td>\n","      <td>62.1</td>\n","      <td>25.3</td>\n","      <td>40.8</td>\n","      <td>19.8</td>\n","      <td>10.3</td>\n","      <td>49.400000</td>\n","      <td>43.100000</td>\n","      <td>687.0</td>\n","      <td>87.800000</td>\n","      <td>2.400000</td>\n","      <td>0.900000</td>\n","      <td>alpha carrier</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>female</td>\n","      <td>10.8</td>\n","      <td>35.2</td>\n","      <td>5.12</td>\n","      <td>68.7</td>\n","      <td>21.2</td>\n","      <td>30.8</td>\n","      <td>13.4</td>\n","      <td>9.6</td>\n","      <td>53.000000</td>\n","      <td>33.000000</td>\n","      <td>309.0</td>\n","      <td>88.500000</td>\n","      <td>2.600000</td>\n","      <td>0.100000</td>\n","      <td>alpha carrier</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>male</td>\n","      <td>14.5</td>\n","      <td>43.5</td>\n","      <td>5.17</td>\n","      <td>84.0</td>\n","      <td>28.0</td>\n","      <td>33.4</td>\n","      <td>12.1</td>\n","      <td>11.9</td>\n","      <td>31.000000</td>\n","      <td>50.000000</td>\n","      <td>334.0</td>\n","      <td>86.800000</td>\n","      <td>2.800000</td>\n","      <td>0.300000</td>\n","      <td>alpha carrier</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>male</td>\n","      <td>11.5</td>\n","      <td>34.4</td>\n","      <td>5.02</td>\n","      <td>68.7</td>\n","      <td>22.9</td>\n","      <td>33.4</td>\n","      <td>15.7</td>\n","      <td>20.4</td>\n","      <td>67.000000</td>\n","      <td>30.000000</td>\n","      <td>596.0</td>\n","      <td>86.300000</td>\n","      <td>2.400000</td>\n","      <td>1.300000</td>\n","      <td>alpha carrier</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>198</th>\n","      <td>male</td>\n","      <td>15.5</td>\n","      <td>45.9</td>\n","      <td>5.19</td>\n","      <td>88.4</td>\n","      <td>29.9</td>\n","      <td>33.8</td>\n","      <td>12.6</td>\n","      <td>8.8</td>\n","      <td>47.565000</td>\n","      <td>40.975000</td>\n","      <td>177.0</td>\n","      <td>88.600000</td>\n","      <td>3.200000</td>\n","      <td>0.400000</td>\n","      <td>normal</td>\n","    </tr>\n","    <tr>\n","      <th>199</th>\n","      <td>female</td>\n","      <td>10.4</td>\n","      <td>33.3</td>\n","      <td>4.93</td>\n","      <td>67.6</td>\n","      <td>21.1</td>\n","      <td>31.2</td>\n","      <td>14.8</td>\n","      <td>8.9</td>\n","      <td>44.478378</td>\n","      <td>45.527027</td>\n","      <td>295.0</td>\n","      <td>88.000000</td>\n","      <td>2.400000</td>\n","      <td>0.500000</td>\n","      <td>normal</td>\n","    </tr>\n","    <tr>\n","      <th>200</th>\n","      <td>male</td>\n","      <td>9.8</td>\n","      <td>29.8</td>\n","      <td>4.75</td>\n","      <td>62.7</td>\n","      <td>19.0</td>\n","      <td>30.4</td>\n","      <td>14.7</td>\n","      <td>7.2</td>\n","      <td>48.234483</td>\n","      <td>41.537931</td>\n","      <td>262.0</td>\n","      <td>85.100000</td>\n","      <td>2.400000</td>\n","      <td>1.100000</td>\n","      <td>normal</td>\n","    </tr>\n","    <tr>\n","      <th>201</th>\n","      <td>male</td>\n","      <td>11.2</td>\n","      <td>37.2</td>\n","      <td>5.43</td>\n","      <td>68.5</td>\n","      <td>20.6</td>\n","      <td>30.1</td>\n","      <td>15.1</td>\n","      <td>12.0</td>\n","      <td>13.500000</td>\n","      <td>76.800000</td>\n","      <td>277.0</td>\n","      <td>86.523291</td>\n","      <td>2.588608</td>\n","      <td>0.769231</td>\n","      <td>normal</td>\n","    </tr>\n","    <tr>\n","      <th>202</th>\n","      <td>male</td>\n","      <td>14.4</td>\n","      <td>44.5</td>\n","      <td>5.70</td>\n","      <td>78.0</td>\n","      <td>25.3</td>\n","      <td>31.2</td>\n","      <td>15.0</td>\n","      <td>7.2</td>\n","      <td>36.000000</td>\n","      <td>59.000000</td>\n","      <td>224.0</td>\n","      <td>86.523291</td>\n","      <td>2.588608</td>\n","      <td>0.769231</td>\n","      <td>normal</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>203 rows × 16 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6f3bba81-964c-4cf2-bb19-cd090682c543')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-6f3bba81-964c-4cf2-bb19-cd090682c543 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-6f3bba81-964c-4cf2-bb19-cd090682c543');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-fdeed63d-82f1-46a1-8427-e8219e0e1216\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-fdeed63d-82f1-46a1-8427-e8219e0e1216')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-fdeed63d-82f1-46a1-8427-e8219e0e1216 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_88ee9625-92cb-46e0-b52f-b2f7453aa9c7\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_88ee9625-92cb-46e0-b52f-b2f7453aa9c7 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 203,\n  \"fields\": [\n    {\n      \"column\": \"sex\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"male\",\n          \"female\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"hb\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.7577996281576878,\n        \"min\": 7.6,\n        \"max\": 16.7,\n        \"num_unique_values\": 70,\n        \"samples\": [\n          7.6,\n          10.8\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"pcv\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.821294604835204,\n        \"min\": 22.1,\n        \"max\": 51.1,\n        \"num_unique_values\": 111,\n        \"samples\": [\n          43.9,\n          51.1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"rbc\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.5859289945604566,\n        \"min\": 2.41,\n        \"max\": 6.77,\n        \"num_unique_values\": 133,\n        \"samples\": [\n          5.47,\n          6.35\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mcv\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9.280343782018916,\n        \"min\": 47.7,\n        \"max\": 91.7,\n        \"num_unique_values\": 146,\n        \"samples\": [\n          88.7,\n          64.6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mch\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3.8058441575087882,\n        \"min\": 11.1,\n        \"max\": 35.6,\n        \"num_unique_values\": 102,\n        \"samples\": [\n          17.2,\n          25.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mchc\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.9792766494692917,\n        \"min\": 21.1,\n        \"max\": 40.8,\n        \"num_unique_values\": 71,\n        \"samples\": [\n          28.9,\n          30.8\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"rdw\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.38102724408395,\n        \"min\": 10.8,\n        \"max\": 28.8,\n        \"num_unique_values\": 73,\n        \"samples\": [\n          11.9,\n          15.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"wbc\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.5917818388237692,\n        \"min\": 2.3,\n        \"max\": 20.4,\n        \"num_unique_values\": 111,\n        \"samples\": [\n          13.67,\n          7.3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"neut\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11.797729586834066,\n        \"min\": 6.2,\n        \"max\": 77.5,\n        \"num_unique_values\": 98,\n        \"samples\": [\n          30.4,\n          30.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"lymph\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11.992416850875454,\n        \"min\": 10.3,\n        \"max\": 87.0,\n        \"num_unique_values\": 96,\n        \"samples\": [\n          52.1,\n          69.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"plt\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 114.28433685351321,\n        \"min\": 100.0,\n        \"max\": 1107.0,\n        \"num_unique_values\": 142,\n        \"samples\": [\n          274.0,\n          230.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"hba\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.4364324315409336,\n        \"min\": 68.0,\n        \"max\": 98.4,\n        \"num_unique_values\": 61,\n        \"samples\": [\n          88.5,\n          87.7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"hba2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.31288938416512035,\n        \"min\": 0.3,\n        \"max\": 3.3,\n        \"num_unique_values\": 20,\n        \"samples\": [\n          2.6,\n          1.7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"hbf\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.7399031632519216,\n        \"min\": 0.0,\n        \"max\": 5.8,\n        \"num_unique_values\": 30,\n        \"samples\": [\n          2.2,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"phenotype\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"normal\",\n          \"alpha carrier\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":9}]},{"cell_type":"markdown","source":["## PREPROCESSING DATA\n"],"metadata":{"id":"4Ly0QKv3eRM9"}},{"cell_type":"markdown","source":["1. Checking Missing Values"],"metadata":{"id":"DHcsgvijeUP6"}},{"cell_type":"code","source":["nan_data = df[df.isna().any(axis=1)]\n","nan_data"],"metadata":{"id":"_P6BR1TCWfEZ","outputId":"d88af2c4-f82c-436c-b315-0bd8fa6f28bd","executionInfo":{"status":"ok","timestamp":1715800083817,"user_tz":-330,"elapsed":3,"user":{"displayName":"Shiv Mehrotra","userId":"02029571613485054389"}},"colab":{"base_uri":"https://localhost:8080/","height":143}},"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        sex    hb        pcv       rbc        mcv   mch       mchc        rdw  \\\n","86   female  10.2  35.876404  5.061346  72.546923   NaN  32.239423  14.827660   \n","132  female  12.0  35.600000       NaN  69.300000  35.6  33.700000  13.400000   \n","147  female  11.6  33.120000  5.600000  66.800000   NaN  31.631707  16.642432   \n","\n","       wbc       neut      lymph    plt        hba      hba2       hbf  \\\n","86    7.99  47.000000  47.000000  351.0  88.800000  2.500000  1.300000   \n","132  11.07  41.600000  25.100000  153.0  87.331429  2.474286  0.560909   \n","147   7.42  48.234483  41.537931  251.0  87.331429  2.474286  0.560909   \n","\n","         phenotype  \n","86   alpha carrier  \n","132  alpha carrier  \n","147  alpha carrier  "],"text/html":["\n","  <div id=\"df-099f7f56-3ce0-4d70-9323-94837796ce20\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>sex</th>\n","      <th>hb</th>\n","      <th>pcv</th>\n","      <th>rbc</th>\n","      <th>mcv</th>\n","      <th>mch</th>\n","      <th>mchc</th>\n","      <th>rdw</th>\n","      <th>wbc</th>\n","      <th>neut</th>\n","      <th>lymph</th>\n","      <th>plt</th>\n","      <th>hba</th>\n","      <th>hba2</th>\n","      <th>hbf</th>\n","      <th>phenotype</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>86</th>\n","      <td>female</td>\n","      <td>10.2</td>\n","      <td>35.876404</td>\n","      <td>5.061346</td>\n","      <td>72.546923</td>\n","      <td>NaN</td>\n","      <td>32.239423</td>\n","      <td>14.827660</td>\n","      <td>7.99</td>\n","      <td>47.000000</td>\n","      <td>47.000000</td>\n","      <td>351.0</td>\n","      <td>88.800000</td>\n","      <td>2.500000</td>\n","      <td>1.300000</td>\n","      <td>alpha carrier</td>\n","    </tr>\n","    <tr>\n","      <th>132</th>\n","      <td>female</td>\n","      <td>12.0</td>\n","      <td>35.600000</td>\n","      <td>NaN</td>\n","      <td>69.300000</td>\n","      <td>35.6</td>\n","      <td>33.700000</td>\n","      <td>13.400000</td>\n","      <td>11.07</td>\n","      <td>41.600000</td>\n","      <td>25.100000</td>\n","      <td>153.0</td>\n","      <td>87.331429</td>\n","      <td>2.474286</td>\n","      <td>0.560909</td>\n","      <td>alpha carrier</td>\n","    </tr>\n","    <tr>\n","      <th>147</th>\n","      <td>female</td>\n","      <td>11.6</td>\n","      <td>33.120000</td>\n","      <td>5.600000</td>\n","      <td>66.800000</td>\n","      <td>NaN</td>\n","      <td>31.631707</td>\n","      <td>16.642432</td>\n","      <td>7.42</td>\n","      <td>48.234483</td>\n","      <td>41.537931</td>\n","      <td>251.0</td>\n","      <td>87.331429</td>\n","      <td>2.474286</td>\n","      <td>0.560909</td>\n","      <td>alpha carrier</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-099f7f56-3ce0-4d70-9323-94837796ce20')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-099f7f56-3ce0-4d70-9323-94837796ce20 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-099f7f56-3ce0-4d70-9323-94837796ce20');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-a842cf6f-0458-46c4-9f12-e1d7d513fb0b\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a842cf6f-0458-46c4-9f12-e1d7d513fb0b')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-a842cf6f-0458-46c4-9f12-e1d7d513fb0b button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_aa1f5cc9-3151-4346-ba23-5018dbd9f165\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('nan_data')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_aa1f5cc9-3151-4346-ba23-5018dbd9f165 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('nan_data');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"nan_data","summary":"{\n  \"name\": \"nan_data\",\n  \"rows\": 3,\n  \"fields\": [\n    {\n      \"column\": \"sex\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"female\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"hb\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.945163125250522,\n        \"min\": 10.2,\n        \"max\": 12.0,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          10.2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"pcv\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.5179243039199037,\n        \"min\": 33.12,\n        \"max\": 35.87640449,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          35.87640449\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"rbc\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.38088578721881416,\n        \"min\": 5.061346154,\n        \"max\": 5.6,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          5.6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mcv\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.8815399347939348,\n        \"min\": 66.8,\n        \"max\": 72.54692308,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          72.54692308\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mch\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 35.6,\n        \"max\": 35.6,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          35.6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mchc\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0630489165862078,\n        \"min\": 31.63170732,\n        \"max\": 33.7,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          32.23942308\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"rdw\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.62506309848371,\n        \"min\": 13.4,\n        \"max\": 16.64243243,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          14.82765957\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"wbc\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.96357666856513,\n        \"min\": 7.42,\n        \"max\": 11.07,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          7.99\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"neut\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3.5284630548695084,\n        \"min\": 41.6,\n        \"max\": 48.23448276,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          47.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"lymph\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11.399194225763457,\n        \"min\": 25.1,\n        \"max\": 47.0,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          47.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"plt\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 99.00168348736972,\n        \"min\": 153.0,\n        \"max\": 351.0,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          351.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"hba\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.847880110434692,\n        \"min\": 87.33142857,\n        \"max\": 88.8,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          87.33142857\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"hba2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.014846149944118979,\n        \"min\": 2.474285714,\n        \"max\": 2.5,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          2.474285714\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"hbf\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4267143352667552,\n        \"min\": 0.560909091,\n        \"max\": 1.3,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.560909091\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"phenotype\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"alpha carrier\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["df = df.dropna()\n","df"],"metadata":{"id":"IW3__U1bWs60","outputId":"04dcef25-c1c1-4bf9-d41a-d08e3bc45b11","executionInfo":{"status":"ok","timestamp":1715800087240,"user_tz":-330,"elapsed":3,"user":{"displayName":"Shiv Mehrotra","userId":"02029571613485054389"}},"colab":{"base_uri":"https://localhost:8080/","height":423}},"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        sex    hb   pcv   rbc   mcv   mch  mchc   rdw   wbc       neut  \\\n","0    female  10.8  35.2  5.12  68.7  21.2  30.8  13.4   9.6  53.000000   \n","1      male  10.8  26.6  4.28  62.1  25.3  40.8  19.8  10.3  49.400000   \n","2    female  10.8  35.2  5.12  68.7  21.2  30.8  13.4   9.6  53.000000   \n","3      male  14.5  43.5  5.17  84.0  28.0  33.4  12.1  11.9  31.000000   \n","4      male  11.5  34.4  5.02  68.7  22.9  33.4  15.7  20.4  67.000000   \n","..      ...   ...   ...   ...   ...   ...   ...   ...   ...        ...   \n","198    male  15.5  45.9  5.19  88.4  29.9  33.8  12.6   8.8  47.565000   \n","199  female  10.4  33.3  4.93  67.6  21.1  31.2  14.8   8.9  44.478378   \n","200    male   9.8  29.8  4.75  62.7  19.0  30.4  14.7   7.2  48.234483   \n","201    male  11.2  37.2  5.43  68.5  20.6  30.1  15.1  12.0  13.500000   \n","202    male  14.4  44.5  5.70  78.0  25.3  31.2  15.0   7.2  36.000000   \n","\n","         lymph    plt        hba      hba2       hbf      phenotype  \n","0    33.000000  309.0  88.500000  2.600000  0.110000  alpha carrier  \n","1    43.100000  687.0  87.800000  2.400000  0.900000  alpha carrier  \n","2    33.000000  309.0  88.500000  2.600000  0.100000  alpha carrier  \n","3    50.000000  334.0  86.800000  2.800000  0.300000  alpha carrier  \n","4    30.000000  596.0  86.300000  2.400000  1.300000  alpha carrier  \n","..         ...    ...        ...       ...       ...            ...  \n","198  40.975000  177.0  88.600000  3.200000  0.400000         normal  \n","199  45.527027  295.0  88.000000  2.400000  0.500000         normal  \n","200  41.537931  262.0  85.100000  2.400000  1.100000         normal  \n","201  76.800000  277.0  86.523291  2.588608  0.769231         normal  \n","202  59.000000  224.0  86.523291  2.588608  0.769231         normal  \n","\n","[200 rows x 16 columns]"],"text/html":["\n","  <div id=\"df-7e406428-73e0-463b-bfba-6aec384d2091\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>sex</th>\n","      <th>hb</th>\n","      <th>pcv</th>\n","      <th>rbc</th>\n","      <th>mcv</th>\n","      <th>mch</th>\n","      <th>mchc</th>\n","      <th>rdw</th>\n","      <th>wbc</th>\n","      <th>neut</th>\n","      <th>lymph</th>\n","      <th>plt</th>\n","      <th>hba</th>\n","      <th>hba2</th>\n","      <th>hbf</th>\n","      <th>phenotype</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>female</td>\n","      <td>10.8</td>\n","      <td>35.2</td>\n","      <td>5.12</td>\n","      <td>68.7</td>\n","      <td>21.2</td>\n","      <td>30.8</td>\n","      <td>13.4</td>\n","      <td>9.6</td>\n","      <td>53.000000</td>\n","      <td>33.000000</td>\n","      <td>309.0</td>\n","      <td>88.500000</td>\n","      <td>2.600000</td>\n","      <td>0.110000</td>\n","      <td>alpha carrier</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>male</td>\n","      <td>10.8</td>\n","      <td>26.6</td>\n","      <td>4.28</td>\n","      <td>62.1</td>\n","      <td>25.3</td>\n","      <td>40.8</td>\n","      <td>19.8</td>\n","      <td>10.3</td>\n","      <td>49.400000</td>\n","      <td>43.100000</td>\n","      <td>687.0</td>\n","      <td>87.800000</td>\n","      <td>2.400000</td>\n","      <td>0.900000</td>\n","      <td>alpha carrier</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>female</td>\n","      <td>10.8</td>\n","      <td>35.2</td>\n","      <td>5.12</td>\n","      <td>68.7</td>\n","      <td>21.2</td>\n","      <td>30.8</td>\n","      <td>13.4</td>\n","      <td>9.6</td>\n","      <td>53.000000</td>\n","      <td>33.000000</td>\n","      <td>309.0</td>\n","      <td>88.500000</td>\n","      <td>2.600000</td>\n","      <td>0.100000</td>\n","      <td>alpha carrier</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>male</td>\n","      <td>14.5</td>\n","      <td>43.5</td>\n","      <td>5.17</td>\n","      <td>84.0</td>\n","      <td>28.0</td>\n","      <td>33.4</td>\n","      <td>12.1</td>\n","      <td>11.9</td>\n","      <td>31.000000</td>\n","      <td>50.000000</td>\n","      <td>334.0</td>\n","      <td>86.800000</td>\n","      <td>2.800000</td>\n","      <td>0.300000</td>\n","      <td>alpha carrier</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>male</td>\n","      <td>11.5</td>\n","      <td>34.4</td>\n","      <td>5.02</td>\n","      <td>68.7</td>\n","      <td>22.9</td>\n","      <td>33.4</td>\n","      <td>15.7</td>\n","      <td>20.4</td>\n","      <td>67.000000</td>\n","      <td>30.000000</td>\n","      <td>596.0</td>\n","      <td>86.300000</td>\n","      <td>2.400000</td>\n","      <td>1.300000</td>\n","      <td>alpha carrier</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>198</th>\n","      <td>male</td>\n","      <td>15.5</td>\n","      <td>45.9</td>\n","      <td>5.19</td>\n","      <td>88.4</td>\n","      <td>29.9</td>\n","      <td>33.8</td>\n","      <td>12.6</td>\n","      <td>8.8</td>\n","      <td>47.565000</td>\n","      <td>40.975000</td>\n","      <td>177.0</td>\n","      <td>88.600000</td>\n","      <td>3.200000</td>\n","      <td>0.400000</td>\n","      <td>normal</td>\n","    </tr>\n","    <tr>\n","      <th>199</th>\n","      <td>female</td>\n","      <td>10.4</td>\n","      <td>33.3</td>\n","      <td>4.93</td>\n","      <td>67.6</td>\n","      <td>21.1</td>\n","      <td>31.2</td>\n","      <td>14.8</td>\n","      <td>8.9</td>\n","      <td>44.478378</td>\n","      <td>45.527027</td>\n","      <td>295.0</td>\n","      <td>88.000000</td>\n","      <td>2.400000</td>\n","      <td>0.500000</td>\n","      <td>normal</td>\n","    </tr>\n","    <tr>\n","      <th>200</th>\n","      <td>male</td>\n","      <td>9.8</td>\n","      <td>29.8</td>\n","      <td>4.75</td>\n","      <td>62.7</td>\n","      <td>19.0</td>\n","      <td>30.4</td>\n","      <td>14.7</td>\n","      <td>7.2</td>\n","      <td>48.234483</td>\n","      <td>41.537931</td>\n","      <td>262.0</td>\n","      <td>85.100000</td>\n","      <td>2.400000</td>\n","      <td>1.100000</td>\n","      <td>normal</td>\n","    </tr>\n","    <tr>\n","      <th>201</th>\n","      <td>male</td>\n","      <td>11.2</td>\n","      <td>37.2</td>\n","      <td>5.43</td>\n","      <td>68.5</td>\n","      <td>20.6</td>\n","      <td>30.1</td>\n","      <td>15.1</td>\n","      <td>12.0</td>\n","      <td>13.500000</td>\n","      <td>76.800000</td>\n","      <td>277.0</td>\n","      <td>86.523291</td>\n","      <td>2.588608</td>\n","      <td>0.769231</td>\n","      <td>normal</td>\n","    </tr>\n","    <tr>\n","      <th>202</th>\n","      <td>male</td>\n","      <td>14.4</td>\n","      <td>44.5</td>\n","      <td>5.70</td>\n","      <td>78.0</td>\n","      <td>25.3</td>\n","      <td>31.2</td>\n","      <td>15.0</td>\n","      <td>7.2</td>\n","      <td>36.000000</td>\n","      <td>59.000000</td>\n","      <td>224.0</td>\n","      <td>86.523291</td>\n","      <td>2.588608</td>\n","      <td>0.769231</td>\n","      <td>normal</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>200 rows × 16 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7e406428-73e0-463b-bfba-6aec384d2091')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-7e406428-73e0-463b-bfba-6aec384d2091 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-7e406428-73e0-463b-bfba-6aec384d2091');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-f5c01a8e-069c-44a6-b19b-8db06ac984ef\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f5c01a8e-069c-44a6-b19b-8db06ac984ef')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-f5c01a8e-069c-44a6-b19b-8db06ac984ef button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_39709284-b609-4ac3-8539-3ad4ef105c66\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_39709284-b609-4ac3-8539-3ad4ef105c66 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 200,\n  \"fields\": [\n    {\n      \"column\": \"sex\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"male\",\n          \"female\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"hb\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.7653703328367965,\n        \"min\": 7.6,\n        \"max\": 16.7,\n        \"num_unique_values\": 70,\n        \"samples\": [\n          7.6,\n          10.8\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"pcv\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.849943257336893,\n        \"min\": 22.1,\n        \"max\": 51.1,\n        \"num_unique_values\": 110,\n        \"samples\": [\n          43.9,\n          51.1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"rbc\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.5876021540611355,\n        \"min\": 2.41,\n        \"max\": 6.77,\n        \"num_unique_values\": 132,\n        \"samples\": [\n          4.8,\n          4.6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mcv\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9.328094864925273,\n        \"min\": 47.7,\n        \"max\": 91.7,\n        \"num_unique_values\": 144,\n        \"samples\": [\n          69.2,\n          87.3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mch\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3.728399463954214,\n        \"min\": 11.1,\n        \"max\": 32.1,\n        \"num_unique_values\": 101,\n        \"samples\": [\n          21.1,\n          28.3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mchc\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.991287577144841,\n        \"min\": 21.1,\n        \"max\": 40.8,\n        \"num_unique_values\": 69,\n        \"samples\": [\n          28.9,\n          30.8\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"rdw\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.393331756821202,\n        \"min\": 10.8,\n        \"max\": 28.8,\n        \"num_unique_values\": 73,\n        \"samples\": [\n          11.9,\n          15.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"wbc\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.6034298293521156,\n        \"min\": 2.3,\n        \"max\": 20.4,\n        \"num_unique_values\": 108,\n        \"samples\": [\n          13.67,\n          7.3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"neut\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11.880916172260237,\n        \"min\": 6.2,\n        \"max\": 77.5,\n        \"num_unique_values\": 97,\n        \"samples\": [\n          30.4,\n          30.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"lymph\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12.00808210189191,\n        \"min\": 10.3,\n        \"max\": 87.0,\n        \"num_unique_values\": 96,\n        \"samples\": [\n          64.0,\n          19.6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"plt\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 114.32200908917918,\n        \"min\": 100.0,\n        \"max\": 1107.0,\n        \"num_unique_values\": 140,\n        \"samples\": [\n          324.0,\n          347.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"hba\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.4479375112365216,\n        \"min\": 68.0,\n        \"max\": 98.4,\n        \"num_unique_values\": 61,\n        \"samples\": [\n          88.5,\n          87.7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"hba2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.31500849719778984,\n        \"min\": 0.3,\n        \"max\": 3.3,\n        \"num_unique_values\": 20,\n        \"samples\": [\n          2.6,\n          1.7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"hbf\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.7440210465020755,\n        \"min\": 0.0,\n        \"max\": 5.8,\n        \"num_unique_values\": 30,\n        \"samples\": [\n          2.2,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"phenotype\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"normal\",\n          \"alpha carrier\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":11}]},{"cell_type":"markdown","source":["2. Data Visualisation using Seaborn"],"metadata":{"id":"RSfOxcgDeaXr"}},{"cell_type":"code","source":["import seaborn as sns\n","import matplotlib.pyplot as plt\n","\n","# Assuming you have a DataFrame 'df' with columns 'phenotype' and 'sex'\n","\n","fig, axes = plt.subplots(2, 2, figsize=(15, 8))\n","\n","# Create histograms for 'phenotype' and 'sex'\n","sns.histplot(data=df, x='phenotype', ax=axes[0, 0], color='skyblue')\n","sns.histplot(data=df, x='sex', ax=axes[0, 1], color='skyblue')\n","\n","# Add value labels to the bars\n","for ax in axes.flat:\n","    for p in ax.patches:\n","        ax.annotate(f'{p.get_height():.0f}', (p.get_x() + p.get_width() / 2., p.get_height()),\n","                    ha='center', va='bottom', fontsize=10)\n","\n","plt.show()\n"],"metadata":{"id":"IFAX6u8MW6sT","outputId":"2e3d4a6d-ee43-4193-bcb6-dbe252792a48","executionInfo":{"status":"ok","timestamp":1715800092932,"user_tz":-330,"elapsed":1661,"user":{"displayName":"Shiv Mehrotra","userId":"02029571613485054389"}},"colab":{"base_uri":"https://localhost:8080/","height":677}},"execution_count":12,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1500x800 with 4 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["3. Encoding Transformation"],"metadata":{"id":"_1c-Qy0HeeXH"}},{"cell_type":"code","source":["from sklearn.preprocessing import LabelEncoder\n","encode = LabelEncoder()"],"metadata":{"id":"f8ZDjYc8Xqoo","executionInfo":{"status":"ok","timestamp":1715800098449,"user_tz":-330,"elapsed":1841,"user":{"displayName":"Shiv Mehrotra","userId":"02029571613485054389"}}},"execution_count":13,"outputs":[]},{"cell_type":"code","source":["import seaborn as sns\n","import matplotlib.pyplot as plt\n","\n","# Assuming you have a DataFrame 'df' with columns 'phenotype' and 'sex'\n","\n","fig, axes = plt.subplots(2, 2, figsize=(15, 8))\n","\n","# Create histograms for 'phenotype' and 'sex'\n","sns.histplot(data=df, x='phenotype', ax=axes[0, 0], color='skyblue')\n","sns.histplot(data=df, x='sex', ax=axes[0, 1], color='skyblue')\n","\n","# Add value labels to the bars\n","for ax in axes.flat:\n","    for p in ax.patches:\n","        ax.annotate(f'{p.get_height():.0f}', (p.get_x() + p.get_width() / 2., p.get_height()),\n","                    ha='center', va='bottom', fontsize=10)\n","\n","# Set axis labels and titles\n","axes[0, 0].set_xlabel('Phenotype (Encoded)')\n","axes[0, 1].set_xlabel('Sex (Encoded)')\n","axes[0, 0].set_ylabel('Frequency')\n","axes[0, 1].set_ylabel('Frequency')\n","axes[0, 0].set_title('Distribution of Phenotype')\n","axes[0, 1].set_title('Distribution of Sex')\n","\n","plt.tight_layout()\n","plt.show()\n","\n","\n","\n"],"metadata":{"id":"zxDsiJ6WX0Qt","outputId":"bd424999-1921-4537-e188-8ec7241fb243","executionInfo":{"status":"ok","timestamp":1715800101684,"user_tz":-330,"elapsed":1877,"user":{"displayName":"Shiv Mehrotra","userId":"02029571613485054389"}},"colab":{"base_uri":"https://localhost:8080/","height":767}},"execution_count":14,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1500x800 with 4 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["4. Normalization of MinMax"],"metadata":{"id":"PrAYHhDreja8"}},{"cell_type":"code","source":["def minmax(df_input):\n","  list_fitur = df_input.columns[:-1]\n","  for fitur in list_fitur:\n","    max = df_input[fitur].max()\n","    min = df_input[fitur].min()\n","    df_input[fitur] = (df_input[fitur]-min)/(max-min)\n","  return df_input"],"metadata":{"id":"VQ8AjWeF4VAe","executionInfo":{"status":"ok","timestamp":1715800106172,"user_tz":-330,"elapsed":631,"user":{"displayName":"Shiv Mehrotra","userId":"02029571613485054389"}}},"execution_count":15,"outputs":[]},{"cell_type":"code","source":["from sklearn.preprocessing import MinMaxScaler, LabelEncoder\n","\n","# Assuming df is your DataFrame\n","\n","# Drop non-numeric columns or encode categorical columns\n","numeric_df = df.select_dtypes(include=['number'])  # Select only numeric columns\n","# If you have categorical columns, you can encode them using LabelEncoder\n","label_encoder = LabelEncoder()\n","categorical_cols = df.select_dtypes(include=['object']).columns\n","for col in categorical_cols:\n","    df[col] = label_encoder.fit_transform(df[col])\n","\n","# Instantiate MinMaxScaler\n","scaler = MinMaxScaler()\n","\n","# Fit the scaler to your data and transform it\n","df_scaled = scaler.fit_transform(df)\n","\n","# Get the minimum and maximum values used in the MinMaxScaler transformation\n","min_values = scaler.data_min_\n","max_values = scaler.data_max_\n","\n","print(\"Minimum values used in MinMaxScaler transformation:\", min_values)\n","print(\"Maximum values used in MinMaxScaler transformation:\", max_values)\n","\n","\n","\n","\n","\n","\n"],"metadata":{"id":"O8XOCDF78Ozx","outputId":"a1648b3c-3a1d-49ab-fa4f-68947ac8369e","executionInfo":{"status":"ok","timestamp":1715800109164,"user_tz":-330,"elapsed":3,"user":{"displayName":"Shiv Mehrotra","userId":"02029571613485054389"}},"colab":{"base_uri":"https://localhost:8080/"}},"execution_count":16,"outputs":[{"output_type":"stream","name":"stdout","text":["Minimum values used in MinMaxScaler transformation: [  0.     7.6   22.1    2.41  47.7   11.1   21.1   10.8    2.3    6.2\n","  10.3  100.    68.     0.3    0.     0.  ]\n","Maximum values used in MinMaxScaler transformation: [1.000e+00 1.670e+01 5.110e+01 6.770e+00 9.170e+01 3.210e+01 4.080e+01\n"," 2.880e+01 2.040e+01 7.750e+01 8.700e+01 1.107e+03 9.840e+01 3.300e+00\n"," 5.800e+00 1.000e+00]\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-16-135ffe114d01>:11: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  df[col] = label_encoder.fit_transform(df[col])\n","<ipython-input-16-135ffe114d01>:11: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  df[col] = label_encoder.fit_transform(df[col])\n"]}]},{"cell_type":"markdown","source":["## OVERSAMPLING SMOTE"],"metadata":{"id":"XXNu_Ko-f03s"}},{"cell_type":"code","source":["  from imblearn.over_sampling import SMOTE"],"metadata":{"id":"KS1oKLsFZELQ","executionInfo":{"status":"ok","timestamp":1715800113743,"user_tz":-330,"elapsed":519,"user":{"displayName":"Shiv Mehrotra","userId":"02029571613485054389"}}},"execution_count":17,"outputs":[]},{"cell_type":"code","source":["import pandas as pd\n","\n","# Convert the scaled array back to a DataFrame\n","df_scaled = pd.DataFrame(df_scaled, columns=df.columns)\n","\n","# Separate features (x) and target (y)\n","x = df_scaled.drop(['phenotype'], axis=1)\n","y = df_scaled['phenotype']\n"],"metadata":{"id":"M-mLnEi5XMyW","executionInfo":{"status":"ok","timestamp":1715800115187,"user_tz":-330,"elapsed":2,"user":{"displayName":"Shiv Mehrotra","userId":"02029571613485054389"}}},"execution_count":18,"outputs":[]},{"cell_type":"code","source":["#sebelum oversampling\n","print(x.shape)\n","print(y.shape)"],"metadata":{"id":"P1QhDjdfbvFt","outputId":"1ae5e1da-7649-4724-e293-09acf9d55372","executionInfo":{"status":"ok","timestamp":1715800117083,"user_tz":-330,"elapsed":1,"user":{"displayName":"Shiv Mehrotra","userId":"02029571613485054389"}},"colab":{"base_uri":"https://localhost:8080/"}},"execution_count":19,"outputs":[{"output_type":"stream","name":"stdout","text":["(200, 15)\n","(200,)\n"]}]},{"cell_type":"code","source":["sm = SMOTE(random_state=30)\n","#sampling smote\n","x_sampling,y_sampling = sm.fit_resample(x,y )\n","\n","\n","\n"],"metadata":{"id":"sYIO7ZVC88aN","executionInfo":{"status":"ok","timestamp":1715800120215,"user_tz":-330,"elapsed":9,"user":{"displayName":"Shiv Mehrotra","userId":"02029571613485054389"}}},"execution_count":20,"outputs":[]},{"cell_type":"code","source":["print(x_sampling.shape)\n","print(y_sampling.shape)"],"metadata":{"id":"dJT9oOybcc96","outputId":"1d128362-3ba6-44dc-df31-bcb108240f28","executionInfo":{"status":"ok","timestamp":1715800122868,"user_tz":-330,"elapsed":1,"user":{"displayName":"Shiv Mehrotra","userId":"02029571613485054389"}},"colab":{"base_uri":"https://localhost:8080/"}},"execution_count":21,"outputs":[{"output_type":"stream","name":"stdout","text":["(290, 15)\n","(290,)\n"]}]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","import seaborn as sns\n","\n","# Assuming you have already defined y_sampling\n","# If not, replace y_sampling with your actual data\n","\n","plt.figure(figsize=(9, 6))\n","sns.histplot(data=y_sampling)\n","plt.xlabel('Values')\n","plt.ylabel('Frequency')\n","plt.title('Histogram of y_sampling')\n","plt.grid(True)\n","\n","# Display the values on the histogram\n","for p in sns.histplot(data=y_sampling).patches:\n","    plt.annotate(f\"{int(p.get_height())}\", (p.get_x() + p.get_width() / 2., p.get_height()), ha='center', va='bottom')\n","\n","plt.show()\n","\n","\n"],"metadata":{"id":"25im-cIaco5m","outputId":"93577726-10b5-40bf-d336-d2d3acf48c24","executionInfo":{"status":"ok","timestamp":1715800127529,"user_tz":-330,"elapsed":1194,"user":{"displayName":"Shiv Mehrotra","userId":"02029571613485054389"}},"colab":{"base_uri":"https://localhost:8080/","height":564}},"execution_count":22,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 900x600 with 1 Axes>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAAAwUAAAIjCAYAAABS57fmAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAABM30lEQVR4nO3deVyU5f7/8fewDeCAiKZA4pqmqWnp0ePSSQ3EJVOzQ6YpGmmLZmZWxzaXOlqmHsssv5q5fHPDMuuYmWSLleaW2ubRzC1TrDRFBHGA+/dHP+Z7JlwAYW7wej0fDx4x19xz359rPkD323sZh2VZlgAAAAAYy8/uAgAAAADYi1AAAAAAGI5QAAAAABiOUAAAAAAYjlAAAAAAGI5QAAAAABiOUAAAAAAYjlAAAAAAGI5QAAAAABiOUAAA/6VWrVoaOHCg3WVc9l544QXVqVNH/v7+atasmd3llFnt27dX+/btPY/3798vh8OhefPm2VYTgMsToQDAZWvevHlyOBzasmXLOZ9v3769GjdufMnbWbVqlcaOHXvJ6zHFmjVr9Oijj6pt27aaO3euJkyYYHdJAGC8ALsLAICyZNeuXfLzK9q/l6xatUozZswgGBTSRx99JD8/P82ZM0dBQUF2l1Ou1KxZU1lZWQoMDLS7FACXGY4UAMB/cTqd5W6H6/Tp03aXUCS//PKLQkJCCATF4HA4FBwcLH9/f7tLAXCZIRQAwH/58zUFbrdb48aNU7169RQcHKzKlSurXbt2Sk1NlSQNHDhQM2bMkPTHDlv+V77Tp0/r4YcfVmxsrJxOp66++mpNnjxZlmV5bTcrK0vDhw9XlSpVFBYWpltuuUU///yzHA6H1xGIsWPHyuFw6Pvvv1ffvn1VqVIltWvXTpL09ddfa+DAgapTp46Cg4MVFRWlu+66S8eOHfPaVv46du/erTvvvFMVK1bUFVdcoaeeekqWZemnn35Sjx49FB4erqioKE2ZMqVQ711OTo6eeeYZ1a1bV06nU7Vq1dLjjz+u7OxszzIOh0Nz587V6dOnPe/V+c6PHzNmjAIDA/Xrr78WeG7IkCGKiIjQmTNnClXbqVOnNGLECNWqVUtOp1NVq1ZVfHy8vvrqK88yn332mf7+97+rRo0acjqdio2N1UMPPaSsrCyvdQ0cOFAul0sHDx7UzTffLJfLpSuvvNLzc/DNN9+oY8eOqlChgmrWrKlFixZ5vT7/tLZ169bpnnvuUeXKlRUeHq4BAwbo999/v+A8znVNQX49P//8s3r27CmXy6UrrrhCo0aNUm5urtfrjx07pv79+ys8PFwRERFKSkrSjh07uE4BAKcPAbj8nTx5Ur/99luBcbfbfdHXjh07VhMnTtTdd9+tli1bKj09XVu2bNFXX32l+Ph43XPPPTp8+LBSU1P1v//7v16vtSxLt9xyiz7++GMlJyerWbNm+uCDD/TII4/o559/1r/+9S/PsgMHDlRKSor69++vv/71r/r000/VrVu389b197//XfXq1dOECRM8ASM1NVV79+7VoEGDFBUVpe+++06zZs3Sd999py+//NIrrEjS7bffroYNG+q5557Te++9p2effVaRkZH6n//5H3Xs2FHPP/+8Fi5cqFGjRukvf/mL/va3v13wvbr77rs1f/583XbbbXr44Ye1ceNGTZw4UTt37tTbb78tSfrf//1fzZo1S5s2bdJrr70mSWrTps0519e/f3+NHz9eS5cu1bBhwzzjZ8+e1ZtvvqnevXsrODj4gjXlu/fee/Xmm29q2LBhuuaaa3Ts2DF9/vnn2rlzp66//npJ0rJly5SZman77rtPlStX1qZNmzR9+nQdOnRIy5Yt81pfbm6uunTpor/97W+aNGmSFi5cqGHDhqlChQp64okn1K9fP916662aOXOmBgwYoNatW6t27dpe6xg2bJgiIiI0duxY7dq1S6+++qoOHDigTz75pECvLiY3N1cJCQlq1aqVJk+erA8//FBTpkxR3bp1dd9990mS8vLy1L17d23atEn33XefGjRooHfeeUdJSUlF2haAy5QFAJepuXPnWpIu+NWoUSOv19SsWdNKSkryPG7atKnVrVu3C25n6NCh1rn+nK5YscKSZD377LNe47fddpvlcDisPXv2WJZlWVu3brUkWSNGjPBabuDAgZYka8yYMZ6xMWPGWJKsO+64o8D2MjMzC4wtXrzYkmStW7euwDqGDBniGcvJybGqV69uORwO67nnnvOM//7771ZISIjXe3Iu27dvtyRZd999t9f4qFGjLEnWRx995BlLSkqyKlSocMH15WvdurXVqlUrr7Hly5dbkqyPP/64UOuwLMuqWLGiNXTo0Asuc673b+LEiZbD4bAOHDjgGUtKSrIkWRMmTPCM5b9PDofDWrJkiWf8P//5T4Ee5v9cNm/e3Dp79qxnfNKkSZYk65133vGM3XjjjdaNN97oebxv3z5LkjV37twC9YwfP96r9uuuu85q3ry55/Fbb71lSbKmTZvmGcvNzbU6duxYYJ0AzMPpQwAuezNmzFBqamqBr2uvvfair42IiNB3332nH374ocjbXbVqlfz9/TV8+HCv8YcffliWZen999+XJK1evVqSdP/993st98ADD5x33ffee2+BsZCQEM/3Z86c0W+//aa//vWvkuR1mky+u+++2/O9v7+/WrRoIcuylJyc7BmPiIjQ1Vdfrb179563FumPuUrSyJEjvcYffvhhSdJ77713wdefz4ABA7Rx40b9+OOPnrGFCxcqNjZWN954Y6HXExERoY0bN+rw4cPnXea/37/Tp0/rt99+U5s2bWRZlrZt21Zg+f9+//LfpwoVKigxMdEzfvXVVysiIuKc79+QIUO8rl+57777FBAQ4Hkvi+rPPxM33HCD13ZXr16twMBADR482DPm5+enoUOHFmt7AC4vhAIAl72WLVsqLi6uwFelSpUu+trx48frxIkTql+/vpo0aaJHHnlEX3/9daG2e+DAAcXExCgsLMxrvGHDhp7n8//r5+dX4PSSq6666rzr/vOyknT8+HE9+OCDqlatmkJCQnTFFVd4ljt58mSB5WvUqOH1uGLFigoODlaVKlUKjF/sXPf8Ofy55qioKEVERHjmWlS33367nE6nFi5cKOmPeaxcuVL9+vUr0ik2kyZN0rfffqvY2Fi1bNlSY8eOLbCjfvDgQQ0cOFCRkZGe8/Lzg8ef37/g4GBdccUVXmMVK1ZU9erVC9R1vvevXr16Xo9dLpeio6O1f//+Qs/rQvVUqlTJa7sHDhxQdHS0QkNDvZa70M8ZAHMQCgDgAv72t7/pxx9/1Ouvv67GjRvrtdde0/XXX+85H94u//2v2vkSExM1e/Zs3XvvvVq+fLnWrFnjOQqRl5dXYPlz3cHmfHe1sf50YfT5FPVc+IupVKmSbr75Zk8oePPNN5Wdna0777yzSOtJTEzU3r17NX36dMXExOiFF15Qo0aNPEdrcnNzFR8fr/fee0+PPfaYVqxYodTUVM/Ft39+/873Pl3q+1dc3I0IwKUiFADARURGRmrQoEFavHixfvrpJ1177bVedwQ6345wzZo1dfjwYZ06dcpr/D//+Y/n+fz/5uXlad++fV7L7dmzp9A1/v7771q7dq3+8Y9/aNy4cerVq5fi4+NVp06dQq/jUuTP4c+nWR09elQnTpzwzLU4BgwYoN27d2vz5s1auHChrrvuOjVq1KjI64mOjtb999+vFStWaN++fapcubL++c9/SvrjjkG7d+/WlClT9Nhjj6lHjx6Ki4tTTExMseu+mD+/VxkZGTpy5Ihq1apVKturWbOmjhw5oszMTK/xovycAbh8EQoA4AL+fDtPl8ulq666yus2mxUqVJAknThxwmvZrl27Kjc3Vy+//LLX+L/+9S85HA516dJFkpSQkCBJeuWVV7yWmz59eqHrzP+X4j//i/S0adMKvY5L0bVr13Nub+rUqZJ0wTspXUyXLl1UpUoVPf/88/r000+LfJQgNze3wOk/VatWVUxMjKeP53r/LMvSiy++WOy6L2bWrFled8B69dVXlZOT4/m5KGkJCQlyu92aPXu2ZywvL89zK1UAZuOWpABwAddcc43at2+v5s2bKzIyUlu2bPHc2jJf8+bNJUnDhw9XQkKC/P391adPH3Xv3l0dOnTQE088of3796tp06Zas2aN3nnnHY0YMUJ169b1vL53796aNm2ajh075rkl6e7duyUV7pSc8PBwz+0x3W63rrzySq1Zs6bA0YfS0rRpUyUlJWnWrFk6ceKEbrzxRm3atEnz589Xz5491aFDh2KvOzAwUH369NHLL78sf39/3XHHHUV6/alTp1S9enXddtttatq0qVwulz788ENt3rzZ8xkMDRo0UN26dTVq1Cj9/PPPCg8P11tvvXXRaykuxdmzZ3XTTTcpMTFRu3bt0iuvvKJ27drplltuKZXt9ezZUy1bttTDDz+sPXv2qEGDBnr33Xd1/PhxSSV/6heA8oVQAAAXMHz4cL377rtas2aNsrOzVbNmTT377LN65JFHPMvceuuteuCBB7RkyRK98cYbsixLffr0kZ+fn9599109/fTTWrp0qebOnatatWrphRde8NyVJ9+CBQsUFRWlxYsX6+2331ZcXJyWLl2qq6++utD34l+0aJEeeOABzZgxQ5ZlqVOnTnr//fdL9RSY//baa6+pTp06mjdvnt5++21FRUVp9OjRGjNmzCWve8CAAXr55Zd10003KTo6ukivDQ0N1f333681a9Zo+fLlysvL01VXXaVXXnnFcw//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TLm5ubrzzjvVvHlzvffee/r22281ZMgQ9e/fX5s2bSr2Nt1utxISEhQWFqbPPvtMX3zxhVwulzp37qyzZ88qJydHPXv21I033qivv/5aGzZs0JAhQ+RwOEpiygBgrAC7CwAAlF133XWXXnjhBX366adq3769pD9OHerdu7dq1qypUaNGeZZ94IEH9MEHHyglJUUtW7Ys1vaWLl2qvLw8vfbaa54d/blz5yoiIkKffPKJWrRooZMnT+rmm29W3bp1JUkNGza8tEkCADhSAAA4vwYNGqhNmzZ6/fXXJUl79uzRZ599puTkZOXm5uqZZ55RkyZNFBkZKZfLpQ8++EAHDx4s9vZ27NihPXv2KCwsTC6XSy6XS5GRkTpz5ox+/PFHRUZGauDAgUpISFD37t314osv6siRIyU1XQAwFqEAAHBBycnJeuutt3Tq1CnNnTtXdevW1Y033qgXXnhBL774oh577DF9/PHH2r59uxISEnT27NnzrsvhcHidiiT9ccpQvoyMDDVv3lzbt2/3+tq9e7f69u0r6Y8jBxs2bFCbNm20dOlS1a9fX19++WXpTB4ADEEoAABcUGJiovz8/LRo0SItWLBAd911lxwOh7744gv16NFDd955p5o2bao6depo9+7dF1zXFVdc4fUv+z/88IMyMzM9j6+//nr98MMPqlq1qq666iqvr4oVK3qWu+666zR69GitX79ejRs31qJFi0p+4gBgEEIBAOCCXC6Xbr/9do0ePVpHjhzRwIEDJUn16tVTamqq1q9fr507d+qee+7R0aNHL7iujh076uWXX9a2bdu0ZcsW3XvvvQoMDPQ8369fP1WpUkU9evTQZ599pn379umTTz7R8OHDdejQIe3bt0+jR4/Whg0bdODAAa1Zs0Y//PAD1xUAwCUiFAAALio5OVm///67EhISFBMTI0l68skndf311yshIUHt27dXVFSUevbsecH1TJkyRbGxsbrhhhvUt29fjRo1SqGhoZ7nQ0NDtW7dOtWoUUO33nqrGjZsqOTkZJ05c0bh4eEKDQ3Vf/7zH/Xu3Vv169fXkCFDNHToUN1zzz2lOX0AuOw5rD+f3AkAAADAKBwpAAAAAAxHKAAAAAAMRygAAAAADEcoAAAAAAxHKAAAAAAMRygAAAAADEcoAAAAAAxHKAAAAAAMRygAAAAADEcoAAAAAAxHKAAAAAAM9/8ADXh8guERfSwAAAAASUVORK5CYII=\n"},"metadata":{}}]},{"cell_type":"markdown","source":["## Evaluation of four models(K-nearest neighbours, Naive Bayes, SVM, Random Forest, Gradient Boosting Tree, XGBoost, Adaptive Boosting, Decision Tree)"],"metadata":{"id":"zh-Q4QO6f9GM"}},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","X_train, X_validation, Y_train, Y_validation = train_test_split(x_sampling, y_sampling, test_size=0.20, random_state=1, shuffle=True)\n","\n","\n"],"metadata":{"id":"pxcmwgVjdTIn","executionInfo":{"status":"ok","timestamp":1715800131897,"user_tz":-330,"elapsed":589,"user":{"displayName":"Shiv Mehrotra","userId":"02029571613485054389"}}},"execution_count":23,"outputs":[]},{"cell_type":"code","source":["from sklearn.model_selection import StratifiedKFold, cross_val_score, cross_val_predict\n","from sklearn.metrics import confusion_matrix\n","from sklearn.neighbors import KNeighborsClassifier\n","from sklearn.naive_bayes import GaussianNB\n","from sklearn.svm import SVC\n","from sklearn.ensemble import RandomForestClassifier\n","from xgboost import XGBClassifier\n","from sklearn.ensemble import AdaBoostClassifier\n","from sklearn.ensemble import GradientBoostingClassifier\n","from sklearn.linear_model import LinearRegression\n","from sklearn.tree import DecisionTreeClassifier  # Add this import\n","\n","models = []\n","models.append(('KNN', KNeighborsClassifier()))\n","models.append(('NB', GaussianNB()))\n","models.append(('SVM', SVC(gamma='auto')))\n","models.append(('Random Forest', RandomForestClassifier(n_estimators=100, random_state=0)))\n","models.append(('XGBoost', XGBClassifier()))\n","models.append(('AdaBoost', AdaBoostClassifier(base_estimator=XGBClassifier(eval_metric='mlogloss'))))\n","models.append(('Gradient Boosting', GradientBoostingClassifier()))\n","models.append(('Decision Tree', DecisionTreeClassifier()))  # Add Decision Tree here\n","\n","\n","\n","\n","\n","\n"],"metadata":{"id":"JH48a-I9eKhn","executionInfo":{"status":"ok","timestamp":1715802158698,"user_tz":-330,"elapsed":574,"user":{"displayName":"Shiv Mehrotra","userId":"02029571613485054389"}}},"execution_count":32,"outputs":[]},{"cell_type":"code","source":["import seaborn as sns\n","import matplotlib.pyplot as plt\n","from sklearn.model_selection import StratifiedKFold, cross_val_score, cross_val_predict\n","from sklearn.ensemble import RandomForestClassifier, AdaBoostClassifier, GradientBoostingClassifier\n","from sklearn.neighbors import KNeighborsClassifier\n","from sklearn.naive_bayes import GaussianNB\n","from sklearn.svm import SVC\n","from sklearn.tree import DecisionTreeClassifier  # Add this import\n","from xgboost import XGBClassifier  # Add this import\n","\n","# Initialize the models\n","models = []\n","models.append(('KNN', KNeighborsClassifier()))\n","models.append(('NB', GaussianNB()))\n","models.append(('SVM', SVC(gamma='auto')))\n","models.append(('Random Forest', RandomForestClassifier(n_estimators=100, random_state=0)))\n","models.append(('XGBoost', XGBClassifier()))  # Add XGBoost\n","models.append(('AdaBoost', AdaBoostClassifier(base_estimator=XGBClassifier(eval_metric='mlogloss'))))  # Add AdaBoost\n","models.append(('Gradient Boosting', GradientBoostingClassifier()))  # Add Gradient Boosting\n","models.append(('Decision Tree', DecisionTreeClassifier()))  # Add Decision Tree\n","\n","# Evaluate each model\n","for name, model in models:\n","    kfold = StratifiedKFold(n_splits=15, random_state=1, shuffle=True)\n","    cv_results = cross_val_score(model, X_train, Y_train, cv=kfold)\n","\n","    # Print accuracy using cv_results\n","    print(f\"Model: {name}\")\n","    print(f\"Accuracy: {cv_results.mean():.2f} (Std: {cv_results.std():.2f})\")\n","\n","    # Compute predictions for each fold using cross_val_predict\n","    y_pred = cross_val_predict(model, X_train, Y_train, cv=kfold)\n","\n","    print(\"Confusion Matrix:\")\n","    conf_matrix = confusion_matrix(Y_train, y_pred)\n","    print(conf_matrix)\n","\n","    # Plot confusion matrix heatmap\n","    plt.figure(figsize=(8, 6))\n","    sns.heatmap(conf_matrix, annot=True, fmt='d', cmap='Blues')\n","    plt.title(f\"{name} Confusion Matrix\")\n","    plt.xlabel(\"Predicted Class\")\n","    plt.ylabel(\"True Class\")\n","    plt.show()\n","\n","    print(\"-\" * 40)\n","\n","\n","\n"],"metadata":{"id":"CFwJbImxeAsX","outputId":"2d7e0c52-a7a5-4c6e-b22d-b4fa06a2b50a","executionInfo":{"status":"ok","timestamp":1715802342203,"user_tz":-330,"elapsed":84024,"user":{"displayName":"Shiv Mehrotra","userId":"02029571613485054389"}},"colab":{"base_uri":"https://localhost:8080/","height":1000}},"execution_count":33,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: KNN\n","Accuracy: 0.59 (Std: 0.11)\n","Confusion Matrix:\n","[[48 71]\n"," [24 89]]\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 800x600 with 2 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["----------------------------------------\n","Model: NB\n","Accuracy: 0.55 (Std: 0.11)\n","Confusion Matrix:\n","[[51 68]\n"," [36 77]]\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 800x600 with 2 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["----------------------------------------\n","Model: SVM\n","Accuracy: 0.50 (Std: 0.02)\n","Confusion Matrix:\n","[[115   4]\n"," [111   2]]\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 800x600 with 2 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["----------------------------------------\n","Model: Random Forest\n","Accuracy: 0.76 (Std: 0.10)\n","Confusion Matrix:\n","[[89 30]\n"," [25 88]]\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 800x600 with 2 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["----------------------------------------\n","Model: XGBoost\n","Accuracy: 0.76 (Std: 0.07)\n","Confusion Matrix:\n","[[87 32]\n"," [25 88]]\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 800x600 with 2 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["----------------------------------------\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_base.py:166: FutureWarning: `base_estimator` was renamed to `estimator` in version 1.2 and will be removed in 1.4.\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_base.py:166: FutureWarning: `base_estimator` was renamed to `estimator` in version 1.2 and will be removed in 1.4.\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_base.py:166: FutureWarning: `base_estimator` was renamed to `estimator` in version 1.2 and will be removed in 1.4.\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_base.py:166: FutureWarning: `base_estimator` was renamed to `estimator` in version 1.2 and will be removed in 1.4.\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_base.py:166: FutureWarning: `base_estimator` was renamed to `estimator` in version 1.2 and will be removed in 1.4.\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_base.py:166: FutureWarning: `base_estimator` was renamed to `estimator` in version 1.2 and will be removed in 1.4.\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_base.py:166: FutureWarning: `base_estimator` was renamed to `estimator` in version 1.2 and will be removed in 1.4.\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_base.py:166: FutureWarning: `base_estimator` was renamed to `estimator` in version 1.2 and will be removed in 1.4.\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_base.py:166: FutureWarning: `base_estimator` was renamed to `estimator` in version 1.2 and will be removed in 1.4.\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_base.py:166: FutureWarning: `base_estimator` was renamed to `estimator` in version 1.2 and will be removed in 1.4.\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_base.py:166: FutureWarning: `base_estimator` was renamed to `estimator` in version 1.2 and will be removed in 1.4.\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_base.py:166: FutureWarning: `base_estimator` was renamed to `estimator` in version 1.2 and will be removed in 1.4.\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_base.py:166: FutureWarning: `base_estimator` was renamed to `estimator` in version 1.2 and will be removed in 1.4.\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_base.py:166: FutureWarning: `base_estimator` was renamed to `estimator` in version 1.2 and will be removed in 1.4.\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_base.py:166: FutureWarning: `base_estimator` was renamed to `estimator` in version 1.2 and will be removed in 1.4.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":["Model: AdaBoost\n","Accuracy: 0.51 (Std: 0.02)\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_base.py:166: FutureWarning: `base_estimator` was renamed to `estimator` in version 1.2 and will be removed in 1.4.\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_base.py:166: FutureWarning: `base_estimator` was renamed to `estimator` in version 1.2 and will be removed in 1.4.\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_base.py:166: FutureWarning: `base_estimator` was renamed to `estimator` in version 1.2 and will be removed in 1.4.\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_base.py:166: FutureWarning: `base_estimator` was renamed to `estimator` in version 1.2 and will be removed in 1.4.\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_base.py:166: FutureWarning: `base_estimator` was renamed to `estimator` in version 1.2 and will be removed in 1.4.\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_base.py:166: FutureWarning: `base_estimator` was renamed to `estimator` in version 1.2 and will be removed in 1.4.\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_base.py:166: FutureWarning: `base_estimator` was renamed to `estimator` in version 1.2 and will be removed in 1.4.\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_base.py:166: FutureWarning: `base_estimator` was renamed to `estimator` in version 1.2 and will be removed in 1.4.\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_base.py:166: FutureWarning: `base_estimator` was renamed to `estimator` in version 1.2 and will be removed in 1.4.\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_base.py:166: FutureWarning: `base_estimator` was renamed to `estimator` in version 1.2 and will be removed in 1.4.\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_base.py:166: FutureWarning: `base_estimator` was renamed to `estimator` in version 1.2 and will be removed in 1.4.\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_base.py:166: FutureWarning: `base_estimator` was renamed to `estimator` in version 1.2 and will be removed in 1.4.\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_base.py:166: FutureWarning: `base_estimator` was renamed to `estimator` in version 1.2 and will be removed in 1.4.\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_base.py:166: FutureWarning: `base_estimator` was renamed to `estimator` in version 1.2 and will be removed in 1.4.\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_base.py:166: FutureWarning: `base_estimator` was renamed to `estimator` in version 1.2 and will be removed in 1.4.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":["Confusion Matrix:\n","[[119   0]\n"," [113   0]]\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 800x600 with 2 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["----------------------------------------\n","Model: Gradient Boosting\n","Accuracy: 0.75 (Std: 0.09)\n","Confusion Matrix:\n","[[84 35]\n"," [25 88]]\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 800x600 with 2 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["----------------------------------------\n","Model: Decision Tree\n","Accuracy: 0.68 (Std: 0.11)\n","Confusion Matrix:\n","[[77 42]\n"," [36 77]]\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 800x600 with 2 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["----------------------------------------\n"]}]},{"cell_type":"code","source":["from sklearn.ensemble import RandomForestClassifier, GradientBoostingClassifier, AdaBoostClassifier\n","from sklearn.tree import DecisionTreeClassifier\n","import xgboost as xgb\n","\n","# Create a Random Forest classifier\n","model_rf = RandomForestClassifier(n_estimators=100, random_state=42)\n","\n","# Train the model on your training data\n","model_rf.fit(X_train, Y_train)\n","\n","# Make predictions using the Random Forest model\n","predictionRF = model_rf.predict(X_validation)\n","\n","# Create an XGBoost classifier\n","model_xgb = xgb.XGBClassifier()\n","model_xgb.fit(X_train, Y_train)\n","predictionXGB = model_xgb.predict(X_validation)\n","\n","# Create an AdaBoost classifier\n","model_ada = AdaBoostClassifier()\n","model_ada.fit(X_train, Y_train)\n","predictionAda = model_ada.predict(X_validation)\n","\n","# Create a Gradient Boosting Tree classifier\n","model_gb = GradientBoostingClassifier()\n","model_gb.fit(X_train, Y_train)\n","predictionGB = model_gb.predict(X_validation)\n","\n","# Create a Decision Tree classifier\n","model_dt = DecisionTreeClassifier()\n","model_dt.fit(X_train, Y_train)\n","predictionDT = model_dt.predict(X_validation)\n"],"metadata":{"id":"8YrIXm8vgDf4","executionInfo":{"status":"ok","timestamp":1715803172514,"user_tz":-330,"elapsed":3479,"user":{"displayName":"Shiv Mehrotra","userId":"02029571613485054389"}}},"execution_count":34,"outputs":[]},{"cell_type":"code","source":["from sklearn.metrics import classification_report\n","from sklearn.ensemble import RandomForestClassifier, GradientBoostingClassifier, AdaBoostClassifier\n","from sklearn.tree import DecisionTreeClassifier\n","import xgboost as xgb\n","from sklearn.neighbors import KNeighborsClassifier\n","from sklearn.naive_bayes import GaussianNB\n","from sklearn.svm import SVC\n","\n","# Create a Random Forest classifier\n","model_rf = RandomForestClassifier(n_estimators=100, random_state=42)\n","\n","# Train the model on your training data\n","model_rf.fit(X_train, Y_train)\n","\n","# Make predictions using the Random Forest model\n","predictionRF = model_rf.predict(X_validation)\n","\n","# Print the classification report for Random Forest\n","print(\"=============================== Random Forest ==================================\")\n","print(classification_report(Y_validation, predictionRF))\n","print(\"==============================================================================\")\n","\n","# Now let's add the other classifiers\n","model_xgb = xgb.XGBClassifier()\n","model_ada = AdaBoostClassifier(base_estimator=DecisionTreeClassifier(max_depth=1), n_estimators=100)\n","model_gb = GradientBoostingClassifier(n_estimators=100)\n","model_dt = DecisionTreeClassifier()\n","model_knn = KNeighborsClassifier()\n","model_nb = GaussianNB()\n","model_svm = SVC(gamma='auto')\n","\n","# Train the additional models\n","model_xgb.fit(X_train, Y_train)\n","model_ada.fit(X_train, Y_train)\n","model_gb.fit(X_train, Y_train)\n","model_dt.fit(X_train, Y_train)\n","model_knn.fit(X_train, Y_train)\n","model_nb.fit(X_train, Y_train)\n","model_svm.fit(X_train, Y_train)\n","\n","# Print classification reports for the additional models\n","print(\"=============================== XGBoost ==================================\")\n","print(classification_report(Y_validation, model_xgb.predict(X_validation)))\n","print(\"==============================================================================\")\n","\n","print(\"=============================== AdaBoost ==================================\")\n","print(classification_report(Y_validation, model_ada.predict(X_validation)))\n","print(\"==============================================================================\")\n","\n","print(\"=============================== Gradient Boosting ==================================\")\n","print(classification_report(Y_validation, model_gb.predict(X_validation)))\n","print(\"==============================================================================\")\n","\n","print(\"=============================== Decision Tree ==================================\")\n","print(classification_report(Y_validation, model_dt.predict(X_validation)))\n","print(\"==============================================================================\")\n","\n","print(\"=============================== K-Nearest Neighbors ==================================\")\n","print(classification_report(Y_validation, model_knn.predict(X_validation)))\n","print(\"==============================================================================\")\n","\n","print(\"=============================== Naive Bayes ==================================\")\n","print(classification_report(Y_validation, model_nb.predict(X_validation)))\n","print(\"==============================================================================\")\n","\n","print(\"=============================== Support Vector Machine ==================================\")\n","print(classification_report(Y_validation, model_svm.predict(X_validation)))\n","print(\"==============================================================================\")\n","\n"],"metadata":{"id":"N42Eodv0gFuZ","outputId":"981cf591-1b77-4b65-f21f-d54cd80b9e0a","executionInfo":{"status":"ok","timestamp":1715803634876,"user_tz":-330,"elapsed":6977,"user":{"displayName":"Shiv Mehrotra","userId":"02029571613485054389"}},"colab":{"base_uri":"https://localhost:8080/"}},"execution_count":40,"outputs":[{"output_type":"stream","name":"stdout","text":["=============================== Random Forest ==================================\n","              precision    recall  f1-score   support\n","\n","         0.0       0.72      0.81      0.76        26\n","         1.0       0.83      0.75      0.79        32\n","\n","    accuracy                           0.78        58\n","   macro avg       0.78      0.78      0.78        58\n","weighted avg       0.78      0.78      0.78        58\n","\n","==============================================================================\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_base.py:166: FutureWarning: `base_estimator` was renamed to `estimator` in version 1.2 and will be removed in 1.4.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":["=============================== XGBoost ==================================\n","              precision    recall  f1-score   support\n","\n","         0.0       0.79      0.88      0.84        26\n","         1.0       0.90      0.81      0.85        32\n","\n","    accuracy                           0.84        58\n","   macro avg       0.84      0.85      0.84        58\n","weighted avg       0.85      0.84      0.85        58\n","\n","==============================================================================\n","=============================== AdaBoost ==================================\n","              precision    recall  f1-score   support\n","\n","         0.0       0.86      0.73      0.79        26\n","         1.0       0.81      0.91      0.85        32\n","\n","    accuracy                           0.83        58\n","   macro avg       0.83      0.82      0.82        58\n","weighted avg       0.83      0.83      0.83        58\n","\n","==============================================================================\n","=============================== Gradient Boosting ==================================\n","              precision    recall  f1-score   support\n","\n","         0.0       0.79      0.85      0.81        26\n","         1.0       0.87      0.81      0.84        32\n","\n","    accuracy                           0.83        58\n","   macro avg       0.83      0.83      0.83        58\n","weighted avg       0.83      0.83      0.83        58\n","\n","==============================================================================\n","=============================== Decision Tree ==================================\n","              precision    recall  f1-score   support\n","\n","         0.0       0.70      0.62      0.65        26\n","         1.0       0.71      0.78      0.75        32\n","\n","    accuracy                           0.71        58\n","   macro avg       0.70      0.70      0.70        58\n","weighted avg       0.71      0.71      0.70        58\n","\n","==============================================================================\n","=============================== K-Nearest Neighbors ==================================\n","              precision    recall  f1-score   support\n","\n","         0.0       0.86      0.46      0.60        26\n","         1.0       0.68      0.94      0.79        32\n","\n","    accuracy                           0.72        58\n","   macro avg       0.77      0.70      0.69        58\n","weighted avg       0.76      0.72      0.70        58\n","\n","==============================================================================\n","=============================== Naive Bayes ==================================\n","              precision    recall  f1-score   support\n","\n","         0.0       0.67      0.38      0.49        26\n","         1.0       0.63      0.84      0.72        32\n","\n","    accuracy                           0.64        58\n","   macro avg       0.65      0.61      0.60        58\n","weighted avg       0.65      0.64      0.62        58\n","\n","==============================================================================\n","=============================== Support Vector Machine ==================================\n","              precision    recall  f1-score   support\n","\n","         0.0       0.44      0.96      0.60        26\n","         1.0       0.00      0.00      0.00        32\n","\n","    accuracy                           0.43        58\n","   macro avg       0.22      0.48      0.30        58\n","weighted avg       0.20      0.43      0.27        58\n","\n","==============================================================================\n"]}]}]}